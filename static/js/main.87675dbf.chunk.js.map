{"version":3,"sources":["components/header.js","components/main-components/scoreboard.js","components/main-components/gameboard.js","components/main.js","components/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","class","Scoreboard","props","currentScore","highscore","Gameboard","pieces","id","map","piece","Main","useState","score","boardArray","clicked","game","setGame","useEffect","playTurn","e","target","alert","checkLoss","arrayCopy","slice","randomIndex","currentIndex","length","Math","floor","random","fairMove","checkWin","document","querySelectorAll","forEach","addEventListener","removeEventListener","Footer","href","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.87675dbf.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"App-header\">\n      <div>Memory Game</div>\n      <div class=\"subHeader\">(Don't Pick the same option twice...)</div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Scoreboard = (props) => {\n  const { currentScore, highscore } = props;\n\n  return (\n    <div className=\"scoreboard\">\n      <div>Current Score: {currentScore}</div>\n      <div>High Score: {highscore}</div>\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","import React from 'react';\n\nconst Gameboard = (props) => {\n  const { pieces } = props;\n\n  let id = -1;\n  const iterateId = () => {\n    id++;\n    return id;\n  };\n\n  return (\n    <div className=\"gameboard\">\n      {pieces.map((piece) => {\n        return (\n          <div key={piece.id} id={iterateId()} class=\"gamePiece\">\n            <div class=\"piecePicture\" id={piece.id}></div>\n            <div class=\"pieceTitle\">{piece.id}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Gameboard;\n","import React, { useState, useEffect } from 'react';\nimport Scoreboard from './main-components/scoreboard';\nimport Gameboard from './main-components/gameboard';\n\nconst Main = () => {\n  const [game, setGame] = useState([\n    { score: 0 },\n    { highscore: 0 },\n    {\n      boardArray: [\n        { id: 'Helmet', clicked: false },\n        { id: 'Shiny-Shield', clicked: false },\n        { id: 'Ace', clicked: false },\n        { id: 'Castle', clicked: false },\n        { id: 'Pierced-Shield', clicked: false },\n        { id: 'Terraria', clicked: false },\n        { id: 'Arrows', clicked: false },\n        { id: 'Treasure', clicked: false },\n      ],\n    },\n  ]);\n\n  useEffect(() => {\n    const checkLoss = (e) => {\n      const isHighScore = () => {\n        if (game[0].score < game[1].highscore) {\n          return game[1].highscore;\n        } else {\n          return game[0].score;\n        }\n      };\n\n      if (game[2].boardArray[e.target.id].clicked === true) {\n        alert('Not quite, try again!');\n        setGame([\n          { score: 0 },\n          { highscore: isHighScore() },\n          {\n            boardArray: [\n              { id: 'Helmet', clicked: false },\n              { id: 'Shiny-Shield', clicked: false },\n              { id: 'Ace', clicked: false },\n              { id: 'Castle', clicked: false },\n              { id: 'Pierced-Shield', clicked: false },\n              { id: 'Terraria', clicked: false },\n              { id: 'Arrows', clicked: false },\n              { id: 'Treasure', clicked: false },\n            ],\n          },\n        ]);\n        return true;\n      } else {\n        return;\n      }\n    };\n\n    const fairMove = (e) => {\n      let arrayCopy = game[2].boardArray.slice();\n      arrayCopy[e.target.id].clicked = true;\n\n      let currentIndex = arrayCopy.length,\n        randomIndex;\n\n      while (currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n\n        [arrayCopy[currentIndex], arrayCopy[randomIndex]] = [\n          arrayCopy[randomIndex],\n          arrayCopy[currentIndex],\n        ];\n      }\n      setGame([\n        { score: game[0].score + 1 },\n        { highscore: game[1].highscore },\n        {\n          boardArray: arrayCopy,\n        },\n      ]);\n    };\n\n    const checkWin = () => {\n      if (\n        game[2].boardArray[0].clicked === true &&\n        game[2].boardArray[1].clicked === true &&\n        game[2].boardArray[2].clicked === true &&\n        game[2].boardArray[3].clicked === true &&\n        game[2].boardArray[4].clicked === true &&\n        game[2].boardArray[5].clicked === true &&\n        game[2].boardArray[6].clicked === true &&\n        game[2].boardArray[7].clicked === true\n      ) {\n        alert('You win!');\n        setGame([\n          { score: 0 },\n          { highscore: 8 },\n          {\n            boardArray: [\n              { id: 'Helmet', clicked: false },\n              { id: 'Shiny-Shield', clicked: false },\n              { id: 'Ace', clicked: false },\n              { id: 'Castle', clicked: false },\n              { id: 'Pierced-Shield', clicked: false },\n              { id: 'Terraria', clicked: false },\n              { id: 'Arrows', clicked: false },\n              { id: 'Treasure', clicked: false },\n            ],\n          },\n        ]);\n        return true;\n      }\n    };\n\n    const playTurn = (e) => {\n      if (checkLoss(e) === true) {\n        return;\n      }\n      fairMove(e);\n      if (checkWin() === true) {\n        return;\n      }\n    };\n\n    document\n      .querySelectorAll('.gamePiece')\n      .forEach((piece) => piece.addEventListener('click', playTurn));\n\n    return () => {\n      document\n        .querySelectorAll('.gamePiece')\n        .forEach((piece) => piece.removeEventListener('click', playTurn));\n    };\n  }, [game]);\n\n  return (\n    <div className=\"main\">\n      <Scoreboard currentScore={game[0].score} highscore={game[1].highscore} />\n      <Gameboard pieces={game[2].boardArray} />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className=\"App-footer\">\n      <div>\n        Explore the source code:{' '}\n        <a\n          href=\"https://github.com/skeanster/Memory-Game\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Github\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Main from './components/main';\nimport Footer from './components/footer';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}